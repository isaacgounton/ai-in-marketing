---
import '../styles/global.css';

interface Props {
  title: string;
  description?: string;
}

const { 
  title, 
  description = "Explore the future of AI in Marketing (2025-2035) with comprehensive insights, trends, and real-world examples."
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div class="min-h-screen flex flex-col">
      <header class="sticky top-0 z-50 bg-white/80 backdrop-blur-md border-b border-gray-200">
        <nav class="container py-4">
          <div class="flex items-center justify-between">
            <a href="/" class="text-xl font-bold text-primary">AI Marketing 2035</a>
            <div class="hidden md:flex space-x-8">
              <a href="/" class="text-gray-600 hover:text-primary">Home</a>
              <a href="/research" class="text-gray-600 hover:text-primary">Research</a>
              <a href="/case-studies" class="text-gray-600 hover:text-primary">Case Studies</a>
              <a href="/references" class="text-gray-600 hover:text-primary">References</a>
            </div>
            <!-- Mobile Menu Button -->
            <button class="md:hidden p-2" id="menuButton" aria-label="Toggle menu">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7" />
              </svg>
            </button>
            <!-- Mobile Menu -->
            <div class="hidden absolute top-full left-0 right-0 bg-white border-b border-gray-200 p-4 md:hidden" id="mobileMenu">
              <div class="flex flex-col space-y-4">
                <a href="/" class="text-gray-600 hover:text-primary">Home</a>
                <a href="/research" class="text-gray-600 hover:text-primary">Research</a>
                <a href="/case-studies" class="text-gray-600 hover:text-primary">Case Studies</a>
                <a href="/references" class="text-gray-600 hover:text-primary">References</a>
              </div>
            </div>
          </div>
        </nav>
      </header>

      <main class="flex-grow">
        <slot />
      </main>

      <footer class="bg-gray-900 text-white py-12">
        <div class="container">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
            <div>
              <h3 class="text-lg font-semibold mb-4">AI Marketing 2035</h3>
              <p class="text-gray-400">
                A comprehensive look into the future of marketing technology and artificial intelligence.
              </p>
            </div>
            <div class="text-sm text-gray-400">
              <p>Â© {new Date().getFullYear()} All rights reserved.</p>
              <p class="mt-2">
                Created as part of the final marketing assignment demonstrating the future of AI in marketing.
              </p>
            </div>
          </div>
        </div>
      </footer>
    </div>
    <script>
      // Mobile menu functionality
      const menuButton = document.getElementById('menuButton');
      const mobileMenu = document.getElementById('mobileMenu');
      
      if (menuButton && mobileMenu) {
        menuButton.addEventListener('click', () => {
          mobileMenu.classList.toggle('hidden');
        });

        // Close menu when clicking outside
        document.addEventListener('click', (event) => {
          const isClickInside = menuButton.contains(event.target as Node) || mobileMenu.contains(event.target as Node);
          if (!isClickInside && !mobileMenu.classList.contains('hidden')) {
            mobileMenu.classList.add('hidden');
          }
        });

        // Close menu when navigating
        const mobileLinks = mobileMenu.getElementsByTagName('a');
        Array.from(mobileLinks).forEach(link => {
          link.addEventListener('click', () => {
            mobileMenu.classList.add('hidden');
          });
        });
      }
    </script>
  </body>
</html>
